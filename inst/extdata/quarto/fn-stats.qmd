---
title: "Historical Data"
execute:
  echo: false
format: 
  html:
    fig-width: 8
    fig-height: 4
    code-fold: false
---

```{r load-pkg, echo = FALSE, message = FALSE}
library (githist)
library (lubridate)
```
This page includes several graphs providing insight into the historical
development of the package.

### Data on individual functions

This plot shows time series for the development of the following measures for each function in the package:

- `doclines` = Numbers of lines of documentation per function.
- `npars` = Numbers of parameters per function.
- `loc` = Numbers of lines of code per function.
- `ext_calls` = Numbers calls made to external functions.

The selector below allows any one of these variables to be selected and
plotted. Results in each case are displayed as both median and median values
per function, along with the sum over all functions within the package. These
"sum" values are arbitrarily rescaled for visual display on similar scales to
the other measures.

```{r load-data}
dat <- readRDS ("results.Rds")
```
```{r stats-data}
cols <- names (dat$stats) [which (!names (dat$stats) %in% c ("package", "version"))]
stats <- dat$stats [, cols]
stats$date <- lubridate::ymd (strftime (stats$date, "%y-%m-%d"))
index <- which (stats$measure == "sum")
stats$npars [index] <- stats$npars [index] / 100
stats$loc [index] <- stats$loc [index] / 100
stats$ext_calls [index] <- stats$ext_calls [index] / 20
stats$doclines [index] <- stats$doclines [index] / 20

stats <- tidyr::pivot_longer (stats, c ("doclines", "npars", "loc", "ext_calls"))
```

```{r ojs-in-stats, echo = FALSE}
ojs_define (stats_in = stats)
```
```{ojs stats-transpose}
stats = {
    return transpose(stats_in).map(row => ({
        ...row,
        date: new Date(row.date)
    }));
}
viewof name = Inputs.radio(
    ["doclines", "npars", "loc", "ext_calls"],
    {
        value: "npars",
        label: "Variable:",
    }
)
statsFiltered = stats.filter(function(row) {
  return name.includes(row.name)
})
```

```{ojs stats-plot}
Plot.plot({
    style: `
        overflow: visible;
    `,
    marginLeft: 60,
    marginBottom: 50,
    x: {grid: true},
    y: {grid: true},
    marks: [
        Plot.ruleY([0]),
        Plot.lineY(
            statsFiltered,
            {
                x: "date",
                y: "value",
                stroke: "measure",
                fontSize: 18
            }
        ),
        Plot.text(
            statsFiltered,
            Plot.selectLast({
                x: "date",
                y: "value",
                z: "measure",
                text: "measure",
                textAnchor: "start",
                dx: 3,
                fontSize: 18
            })
        ),
        Plot.axisX(
            {
                fontSize: 14,
                label: "",
                labelArrow: false
            }
        ),
        Plot.axisX(
            {
                fontSize: 20,
                label: "Date",
                labelAnchor: "center",
                labelOffset: 40,
                ticks: []
            }
        ),
        Plot.axisY(
            {
                fontSize: 14,
                label: "",
                labelArrow: false
            }
        ),
        Plot.axisY(
            {
                fontSize: 24,
                label: "Value",
                labelAnchor: "center",
                labelOffset: 55,
                ticks: []
            }
        ),
    ]
})
```
